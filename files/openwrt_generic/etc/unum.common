# Common functions shard between agent init scripts
# Copyright 2018 Minim Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

UNUM_PID_FILE_PREFIX=/var/run/unum

# Kills unum process instance using its PID file
kill_unum() {
  INST_NAME=$1
  ORIG_PID_FN="$UNUM_PID_FILE_PREFIX-$INST_NAME.pid"
  PID_FN=`readlink -f "$ORIG_PID_FN"`
  if [ "$PID_FN" == "" ] || [ ! -e "$PID_FN" ]; then
    echo "No unum process instance found for: $INST_NAME"
    return
  fi
  PID=`cat "$PID_FN"`
  if [ ! -e /proc/$PID/fd ]; then
    echo "No unum $INST_NAME process with PID $PID"
    return
  fi
  if ls -l /proc/$PID/fd/ | grep " $PID_FN\$" > /dev/null 2>&1; then
    kill -9 $PID
    rm -f "$PID_FN"
  else
    echo "Process $PID does not access \"$ORIG_PID_FN\", not killed"
  fi
}

# Check if unum process instance is active
is_running() {
  INST_NAME=$1
  PID_FN="$UNUM_PID_FILE_PREFIX-$INST_NAME.pid"
  PID_FN=`readlink -f "$UNUM_PID_FILE_PREFIX-$INST_NAME.pid"`
  if [ "$PID_FN" == "" ]; then
    false
  else
    PID=`cat "$PID_FN"`
    if [ ! -e /proc/$PID/fd ]; then
      false
    else
      ls -l /proc/$PID/fd/ | grep " $PID_FN\$" > /dev/null 2>&1
    fi
  fi
}

# Prepare for the agent startup
prep_startup() {
  if [ -e /www ] && [ ! -e /www/provision.json ]; then
    ln -sf /tmp/provision_info.json /www/provision.json
  fi
  WANIF=$(uci get network.wan.ifname)
  LANIF=$(uci get network.lan.ifname)
  LANMAC=$(ifconfig $LANIF | awk '/HWaddr/ { print $5 }')
  # match ifconfig output by LAN ethernet address, but ignore the WAN due
  # to some platforms using the same MAC address for both LAN and WAN ports.
  AWK_MATCH_LANMAC='/'$WANIF'/ { next }; /'$LANMAC'/ { print $1 }'
  LANIF=
  TRIES=0
  while [ $TRIES -lt 10 ]; do
    TRIES=$(( TRIES + 1 ))
    # iterate over all LAN interfaces and use the one with an IP address
    # as the defacto LAN interface for Unum.
    for IFNAME in $(ifconfig | awk "$AWK_MATCH_LANMAC"); do
      LANIP=$(ifconfig "$IFNAME" | awk '/inet addr/ { print substr($2, 6) }')
      if [ ! -z "$LANIP" ]; then
        LANIF="$IFNAME"
        # break out of both the enclosing for and while loops
        break 2
      fi
    done
    sleep 1
  done
  if [ -z "$LANIF" ]; then
    echo "fatal: unable to determine LAN network interface name" > /var/log/unum.log
    return 1
  fi
  cp -f /etc/unum/config.json /tmp/config.json.orig
  # Update agent JSON configuration
  if [ -e /etc/unum/config.json ]; then
    sed -i -E -e 's/"lan-if":[ ]?".*"/"lan-if": "'$LANIF'"/' \
              -e 's/"wan-if":[ ]?".*"/"wan-if": "'$WANIF'"/' \
           /etc/unum/config.json
  else
    echo '{"lan-if":"'$LANIF'","wan-if":"'$WANIF'"}' > /etc/unum/config.json
  fi
}
